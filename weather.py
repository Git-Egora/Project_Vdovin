import requests
import os
from dotenv import load_dotenv
import datetime


load_dotenv()

WEATHER_API_KEY = os.getenv('WEATHER_API_KEY')



def get_forecast(city: str) -> list:
    forecast_url = (
        f'http://api.openweathermap.org/data/2.5/forecast?'
        f'q={city}&units=metric&appid={WEATHER_API_KEY}'
    )
    response = requests.get(forecast_url)
    data = response.json()
    print('Forecast API response:', data)
    if 'list' in data:
        return data['list']
    else:
        raise Exception('–ù–µ–∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞')
        #raise Exception(f'–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã. –û—Ç–≤–µ—Ç API: {data}')
   
def aggregate_daily_forecast(forecasts: list) -> list:
    daily = {}
    for forecast in forecasts:
        dt_txt = forecast.get('dt_txt')
        if not dt_txt:
            continue
        date_str, time_str = dt_txt.split(" ")
        if date_str not in daily:
            daily[date_str] = forecast
        if time_str == '12:00:00':
            daily[date_str] = forecast
    daily_forecasts = [daily[date] for date in sorted(daily.keys())]
    return daily_forecasts



def get_one_forecast(city):
    forecast_url = f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric'
    response = requests.get(forecast_url)
    data = response.json()
    if response.status_code == 200:
        date = datetime.datetime.now().strftime('%d.%m.%Y')
        temp_day = data['main']['temp']
        pressure = data['main']['pressure']
        new_pressure = round(pressure*100/133.32, 2)
        humidity = data['main']['humidity']
        wind = data['wind']['speed']
        description = data['weather'][0]['description']
        if description in smiles:
            new_description = smiles[description]
        else:
            new_description = '–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, –Ω–µ –ø–æ–π–º—É, —á—Ç–æ —Ç–∞–º'
        forecast_message = (
            f'–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è <b>{city}</b>:\n\n'
            f'<b>–°–µ–≥–æ–¥–Ω—è, {date}</b>:\nüå° —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_day}¬∞C,\n„Ä∞Ô∏è –¥–∞–≤–ª–µ–Ω–∏–µ: {new_pressure} –º–º.—Ä—Ç.—Å—Ç.,\nüíß –≤–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%,\nüí® —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind} –º/—Å.\n{new_description}\n'# {description}\n\n'
        )    
        return forecast_message
    elif response.status_code == 404:
        raise Exception('–ù–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞')



def get_five_forecasts(city):
    forecasts = get_forecast(city)
    daily_forecasts = aggregate_daily_forecast(forecasts)
    forecast_message = f'–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è <b>{city}</b>:\n\n'
    for forecast in daily_forecasts:
        date = datetime.datetime.fromtimestamp(forecast['dt']).strftime('%d.%m.%Y')
        temp_day = forecast['main']['temp']
        pressure = forecast['main']['pressure']
        humidity = forecast['main']['humidity']
        wind = forecast['wind']['speed']
        description = forecast['weather'][0]['description']
        if description in smiles:
            new_description = smiles[description]
        else:
            new_description = '–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, –Ω–µ –ø–æ–π–º—É, —á—Ç–æ —Ç–∞–º'
        
        forecast_message += f'<b>{date}</b>:\nüå° —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_day}¬∞C,\n„Ä∞Ô∏è –¥–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç.,\nüíß –≤–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%,\nüí® —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind} –º/—Å.\n{new_description}\n\n' #{description}\n\n'
    return forecast_message




#—Å–ª–æ–≤–∞—Ä—å –∏–∫–æ–Ω–æ–∫ –ø–æ–¥ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã
smiles = {
        'thunderstorm with light rain': '–ì—Ä–æ–∑–∞ —Å –Ω–µ–±–æ–ª—å—à–∏–º –¥–æ–∂–¥—ë–º \U000026A1',
	    'thunderstorm with rain': '–ì—Ä–æ–∑–∞ —Å –¥–æ–∂–¥—ë–º \U000026A1',
	    'thunderstorm with heavy rain': '–ì—Ä–æ–∑–∞ —Å —Å–∏–ª—å–Ω—ã–º –¥–æ–∂–¥—ë–º\U000026A1',	 
	    'light thunderstorm': '–ù–µ–±–æ–ª—å—à–∞—è –≥—Ä–æ–∑–∞\U000026A1',	 
	    'thunderstorm': '–ì—Ä–æ–∑–∞ \U000026A1',
	    'heavy thunderstorm': '–°–∏–ª—å–Ω–∞—è –≥—Ä–æ–∑–∞ \U000026A1',	 
	    'ragged thunderstorm': '–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–æ–∑–∞ \U000026A1',	
	    'thunderstorm with light drizzle': '–ì—Ä–æ–∑–∞ —Å –º–æ—Ä–æ—Å—è—â–∏–º –¥–æ–∂–¥—ë–º \U000026A1',	 
	    'thunderstorm with drizzle': '–ì—Ä–æ–∑–∞ —Å –ª–µ–≥–∫–∏–º –º–æ—Ä–æ—Å—è—â–∏–º –¥–æ–∂–¥—ë–º\U000026A1',	 
	    'thunderstorm with heavy drizzle': '–ì—Ä–æ–∑–∞ —Å–∏–ª—å–Ω—ã–º –º–æ—Ä–æ—Å—è—â–∏–º –¥–æ–∂–¥—ë–º \U000026A1',

        'light intensity drizzle': '–õ—ë–≥–∫–∏–π –º–æ—Ä–æ—Å—è—â–∏–π –¥–æ–∂–¥—å \U00002614',
	    'drizzle': '–î–æ–∂–¥—å \U00002614',	 
	    'heavy intensity drizzle': '–î–æ–∂–¥—å \U00002614',	 
	    'light intensity drizzle rain': '–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å \U00002614',	
	    'heavy intensity drizzle rain': '–î–æ–∂–¥—å \U00002614',	 
	    'shower rain and drizzle': '–î–æ–∂–¥—å \U00002614',	 
	    'heavy shower rain and drizzle': '–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å \U00002614', 
	    'shower drizzle': '–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å \U00002614',

        'light rain': '–î–æ–∂–¥—å \U00002614',
	    'moderate rain': '–î–æ–∂–¥—å \U00002614',	 
	    'heavy intensity rain': '–î–æ–∂–¥—å \U00002614',	 
	    'very heavy rain': '–î–æ–∂–¥—å \U00002614',	
	    'extreme rain': '–î–æ–∂–¥—å \U00002614', 
	    'freezing rain': '–î–æ–∂–¥—å \U00002614',	
	    'light intensity shower rain': '–î–æ–∂–¥—å \U00002614',	 
	    'shower rain': '–î–æ–∂–¥—å \U00002614',	
	    'heavy intensity shower rain': '–î–æ–∂–¥—å \U00002614',	 
	    'ragged shower rain': '–î–æ–∂–¥—å \U00002614',	


	    'light snow': '–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ \U0001F328',	
	    'snow': '–°–Ω–µ–≥ \U0001F328',	
	    'heavy snow': '–°–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥ \U0001F328',	 
	    'sleet': '–°–ª—è–∫–æ—Ç—å \U0001F328',	
	    'light shower sleet': '–°–ª—è–∫–æ—Ç—å \U0001F328',	 
	    'shower sleet': '–°–ª—è–∫–æ—Ç—å \U0001F328',	
	    'light rain and snow': '–î–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º \U0001F328',	 
	    'rain and snow': '–î–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º \U0001F328',	
	    'light shower snow': '–°–Ω–µ–≥ \U0001F328',	
	    'shower snow': '–°–Ω–µ–≥ \U0001F328',	
	    'heavy shower snow': '–°–Ω–µ–≥ \U0001F328',	 

        'mist': '–¢—É–º–∞–Ω \U0001F32B',	 
        'smoke': '–¢—É–º–∞–Ω \U0001F32B',	 
        'haze': '–ù–µ–±–æ–ª—å—à–æ–π —Ç—É–º–∞–Ω \U0001F32B',	 
        'sand/dust whirls': '–ü–µ—Å—á–∞–Ω—ã–µ –≤–∏—Ö—Ä–∏ \U0001F32B',	
	    'fog': '–¢—É–º–∞–Ω \U0001F32B',	 
	    'sand': '–ü–µ—Å–∫–æ \U0001F32B',	 
	    'dust': '–ü—ã–ª—å \U0001F32B',	 
	    'volcanic ash': '–í—É–ª–∫–∞–Ω–∏—á–µ—Å–∫–∏–π –ø–µ–ø–µ–ª \U0001F32B',	
        'squalls': '–®–∫–≤–∞–ª–∏—Å—Ç—ã–π –≤–µ—Ç–µ—Ä \U0001F32B',	
	    'tornado': '–¢–æ—Ä–Ω–∞–¥–æ \U0001F32B',	 

	    'few clouds': '–û–±–ª–∞—á–Ω–æ \U00002601',	
        'scattered clouds': '–û–±–ª–∞—á–Ω–æ \U00002601',	
        'broken clouds': '–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å \U00002601',	 
        'overcast clouds': '–ë–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å \U00002601',	

        'clear sky': '–Ø—Å–Ω–æ \U00002600'
    }



